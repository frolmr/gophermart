// Code generated by MockGen. DO NOT EDIT.
// Source: internal/api/handlers/balances_handler.go
//
// Generated by this command:
//
//	mockgen -source=internal/api/handlers/balances_handler.go -destination=internal/mocks/mock_balances_repository.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockBalanceRepository is a mock of BalanceRepository interface.
type MockBalanceRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceRepositoryMockRecorder
	isgomock struct{}
}

// MockBalanceRepositoryMockRecorder is the mock recorder for MockBalanceRepository.
type MockBalanceRepositoryMockRecorder struct {
	mock *MockBalanceRepository
}

// NewMockBalanceRepository creates a new mock instance.
func NewMockBalanceRepository(ctrl *gomock.Controller) *MockBalanceRepository {
	mock := &MockBalanceRepository{ctrl: ctrl}
	mock.recorder = &MockBalanceRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceRepository) EXPECT() *MockBalanceRepositoryMockRecorder {
	return m.recorder
}

// GetUserCurrentBalance mocks base method.
func (m *MockBalanceRepository) GetUserCurrentBalance(userID int64) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserCurrentBalance", userID)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserCurrentBalance indicates an expected call of GetUserCurrentBalance.
func (mr *MockBalanceRepositoryMockRecorder) GetUserCurrentBalance(userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserCurrentBalance", reflect.TypeOf((*MockBalanceRepository)(nil).GetUserCurrentBalance), userID)
}

// GetUserWithdrawalsSum mocks base method.
func (m *MockBalanceRepository) GetUserWithdrawalsSum(userID int64) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserWithdrawalsSum", userID)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserWithdrawalsSum indicates an expected call of GetUserWithdrawalsSum.
func (mr *MockBalanceRepositoryMockRecorder) GetUserWithdrawalsSum(userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserWithdrawalsSum", reflect.TypeOf((*MockBalanceRepository)(nil).GetUserWithdrawalsSum), userID)
}
