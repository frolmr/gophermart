// Code generated by MockGen. DO NOT EDIT.
// Source: internal/client/accrual_client.go
//
// Generated by this command:
//
//	mockgen -source=internal/client/accrual_client.go -destination=internal/mocks/mock_accrual_client.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	domain "github.com/frolmr/gophermart/internal/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockAccrualClientInterface is a mock of AccrualClientInterface interface.
type MockAccrualClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualClientInterfaceMockRecorder
	isgomock struct{}
}

// MockAccrualClientInterfaceMockRecorder is the mock recorder for MockAccrualClientInterface.
type MockAccrualClientInterfaceMockRecorder struct {
	mock *MockAccrualClientInterface
}

// NewMockAccrualClientInterface creates a new mock instance.
func NewMockAccrualClientInterface(ctrl *gomock.Controller) *MockAccrualClientInterface {
	mock := &MockAccrualClientInterface{ctrl: ctrl}
	mock.recorder = &MockAccrualClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrualClientInterface) EXPECT() *MockAccrualClientInterfaceMockRecorder {
	return m.recorder
}

// RequestOrderState mocks base method.
func (m *MockAccrualClientInterface) RequestOrderState(number string) (*domain.AccrualOrder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestOrderState", number)
	ret0, _ := ret[0].(*domain.AccrualOrder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestOrderState indicates an expected call of RequestOrderState.
func (mr *MockAccrualClientInterfaceMockRecorder) RequestOrderState(number any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestOrderState", reflect.TypeOf((*MockAccrualClientInterface)(nil).RequestOrderState), number)
}
